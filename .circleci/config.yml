version: 2.1
commands:
  mtest-command:
    description: "multi-host test"
    parameters:
      script:
        type: string
      runtime:
        type: string
      suite:
        type: string
    steps:
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          command: |
            ./bin/<<parameters.script>> <<parameters.runtime>> <<parameters.suite>>
jobs:
  build:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
      - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    steps:
      - checkout
      - run: test -z "$(gofmt -s -l . | grep -v '^vendor' | tee /dev/stderr)"
      - run: test -z "$(golint $(go list -mod=vendor ./... | grep -v /vendor/) | grep -v '/mtest/.*: should not use dot imports' | tee /de
v/stderr)"
      - run: go install -mod=vendor ./pkg/...
      - run: go test -mod=vendor -race -v ./...
      - run: go vet -mod=vendor ./...
  mtest-docker-functions:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - mtest-command:
          script: run-mtest.sh
          runtime: docker
          suite: ./functions
  mtest-docker-operators:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - mtest-command:
          script: run-mtest.sh
          runtime: docker
          suite: ./operators
  mtest-containerd-functions:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - mtest-command:
          script: run-mtest.sh
          runtime: remote
          suite: ./functions
  mtest-containerd-operators:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - mtest-command:
          script: run-mtest.sh
          runtime: remote
          suite: ./operators
  compose:
    machine:
      image: circleci/classic:edge
    working_directory: ~/work/docker-compose
    steps:
      - checkout:
          path: ~/work
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: wait for docker-compose up
          command: ./wait-up.sh
      - run:
          name: run test
          command: docker-compose run setup /opt/setup/test.sh
      - run:
          name: docker-compose down
          command: docker-compose down

workflows:
  version: 2
  main:
    jobs:
      - build
      - mtest-docker-functions
      - mtest-docker-operators
      - mtest-containerd-functions
      - mtest-containerd-operators
      - compose
