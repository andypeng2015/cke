version: 2.1
commands:
  run-mtest:
    description: "multi-host test"
    parameters:
      runtime:
        type: string
      suite:
        type: string
      target:
        type: string
        default: ""
    steps:
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          command: |
            ./bin/run-mtest.sh <<parameters.runtime>> <<parameters.suite>> <<parameters.target>>

jobs:
  build:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
      - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    steps:
      - checkout
      - run: make test GOBIN=/tmp/workspace
      - persist_to_workspace:
         root: /tmp/workspace
         paths:
           - cke
           - ckecli
  build-image:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy binaries
          command: |
            cp /tmp/workspace/cke docker
            cp /tmp/workspace/ckecli docker
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            docker build -t quay.io/cybozu/cke:latest ./docker
      - run:
          name: Save image
          command: |
            mkdir -p /tmp/docker
            docker save quay.io/cybozu/cke:latest -o /tmp/docker/image
      - persist_to_workspace:
          root: /tmp/docker
          paths:
            - image
  push-image:
    docker:
      - image: docker:stable
    steps:
      - attach_workspace:
          at: /tmp/docker
      - setup_remote_docker
      - run: docker load -i /tmp/docker/image
      - run:
          name: Push docker image to Quay.io
          command: |
            docker login -u $QUAY_USER -p $QUAY_PASSWORD quay.io
            echo "pushing CKE image ..."
            TAG=$(echo $CIRCLE_TAG | cut -c 2-)
            docker tag quay.io/cybozu/cke:latest quay.io/cybozu/cke:$TAG
            docker push quay.io/cybozu/cke:$TAG
            BRANCH=$(echo $TAG | cut -d "." -f 1-2)
            docker tag quay.io/cybozu/cke:latest quay.io/cybozu/cke:$BRANCH
            docker push quay.io/cybozu/cke:$BRANCH
  mtest-containerd-functions:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run-mtest:
          runtime: remote
          suite: ./functions
  mtest-containerd-operators:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run-mtest:
          runtime: remote
          suite: ./operators
  mtest-docker-functions:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run-mtest:
          runtime: docker
          suite: ./functions
  compose:
    machine:
      image: circleci/classic:edge
    working_directory: ~/work/docker-compose
    steps:
      - checkout:
          path: ~/work
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: wait for docker-compose up
          command: ./wait-up.sh
      - run:
          name: run test
          command: docker-compose run setup /opt/setup/test.sh
      - run:
          name: docker-compose down
          command: docker-compose down

workflows:
  version: 2
  main:
    jobs:
      - build
      - build-image:
          requires:
            - build
      - mtest-docker-functions
      - mtest-containerd-functions
      - mtest-containerd-operators
      - compose
  release:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build-image:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - push-image:
          requires:
            - build-image
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
