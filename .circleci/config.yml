version: 2
jobs:
  build:
    docker:
      - image: quay.io/cybozu/golang:1.11-bionic
      - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    steps:
      - checkout
      - run: test -z "$(gofmt -s -l . | grep -v '^vendor' | tee /dev/stderr)"
      - run: golint -set_exit_status $(go list -mod=vendor ./... | grep -v /vendor/)
      - run: go install -mod=vendor ./pkg/... ./tools/...
      - run: go test -mod=vendor -race -v ./...
      - run: go vet -mod=vendor ./...
      - run:
          name: copy to shared workspace
          command: |
            mkdir -p /tmp/workspace
            cp $(which create-disk-if-not-exists) /tmp/workspace/
            cp $(which create-qcow) /tmp/workspace/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - create-disk-if-not-exists
            - create-qcow
  mtest-docker:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run: ./bin/run-mtest.sh docker
  mtest-containerd:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run: ./bin/run-mtest.sh remote
  var-lib-docker-disk:
    docker:
    - image: google/cloud-sdk
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /root/project/account.json
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Create QCOW Image that contains /var/lib/docker
          command: |
            cp /tmp/workspace/create-qcow .
            /tmp/workspace/create-disk-if-not-exists -cleanup=true -instance=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}-var-lib-docker-disk --account-json=/root/project/account.json

  compose:
    machine:
      image: circleci/classic:edge
    working_directory: ~/work/docker-compose
    steps:
      - checkout:
          path: ~/work
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: wait for docker-compose up
          command: ./wait-up.sh
      - run:
          name: run test
          command: docker-compose run setup /opt/setup/test.sh
      - run:
          name: docker-compose down
          command: docker-compose down

workflows:
  version: 2
  main:
    jobs:
      - build
      - var-lib-docker-disk:
          requires:
          - build
      - mtest-docker
      - mtest-containerd
      - compose
