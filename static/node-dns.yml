apiVersion: v1
kind: ServiceAccount
metadata:
  name: cke-node-dns
  namespace: kube-system
  annotations:
    cke.cybozu.com/revision: "1"
---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:node-dns
  namespace: kube-system
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  annotations:
    cke.cybozu.com/revision: "1"
    # turn on auto-reconciliation
    # https://kubernetes.io/docs/reference/access-authn-authz/rbac/#auto-reconciliation
    rbac.authorization.kubernetes.io/autoupdate: "true"
rules:
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
    resourceNames: ["cke-node-dns"]
---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:node-dns
  namespace: kube-system
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  annotations:
    cke.cybozu.com/revision: "1"
    rbac.authorization.kubernetes.io/autoupdate: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system:node-dns
subjects:
- kind: ServiceAccount
  name: cke-node-dns
  namespace: kube-system
---

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: node-dns
  namespace: kube-system
  annotations:
    cke.cybozu.com/image: "{{ .unbound }}"
    cke.cybozu.com/revision: "1"
spec:
  selector:
    matchLabels:
      cke.cybozu.com/appname: node-dns
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        cke.cybozu.com/appname: node-dns
    spec:
      priorityClassName: system-node-critical
      nodeSelector:
        kubernetes.io/os: linux
      hostNetwork: true
      tolerations:
        # Make sure unbound gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      terminationGracePeriodSeconds: 0
      serviceAccountName: cke-node-dns
      containers:
        - name: unbound
          image: {{ .unbound }}
          args:
            - -c
            - /etc/unbound/unbound.conf
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          readinessProbe:
            tcpSocket:
              port: 53
              host: localhost
            periodSeconds: 1
          livenessProbe:
            tcpSocket:
              port: 53
              host: localhost
            periodSeconds: 1
            initialDelaySeconds: 1
            failureThreshold: 6
          volumeMounts:
            - name: config-volume
              mountPath: /etc/unbound
        - name: reload
          image: {{ .unbound }}
          command:
          - /usr/local/bin/reload-unbound
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config-volume
              mountPath: /etc/unbound
      volumes:
        - name: config-volume
          configMap:
            name: node-dns
            items:
            - key: unbound.conf
              path: unbound.conf
